From 8702c41a10fd437bdebcced8eac434f2eef7c4b6 Mon Sep 17 00:00:00 2001
From: Jay Logue <jaylogue@google.com>
Date: Thu, 29 Aug 2019 20:12:12 -0700
Subject: [PATCH] openweave-esp32-lwip-patch-0004 : Fix source IPv6 address
 selection logic

Fixed a bug in LwIP source address selection logic for IPv6 packets.

This change corresponds to commit e2cb69d8d5782b35c95120860e56c08430ea238c
from tps/lwip:nest/stable

        Author: james woodyatt <jhw@nestlabs.com>
        Date:   Mon Mar 9 12:49:01 2015 -0700

        Jira COM-483: LWIP bad source IPv6 address selection logic.
---
 lwip/src/core/ipv6/ip6.c         | 17 ++++++++++++++++-
 lwip/src/include/lwip/ip6_addr.h | 19 +++++++++++++++++++
 2 files changed, 35 insertions(+), 1 deletion(-)

diff --git a/lwip/src/core/ipv6/ip6.c b/lwip/src/core/ipv6/ip6.c
index e975771..f25046f 100644
--- a/lwip/src/core/ipv6/ip6.c
+++ b/lwip/src/core/ipv6/ip6.c
@@ -38,6 +38,21 @@
  * Please coordinate changes and requests with Ivan Delamer
  * <delamer@inicotech.com>
  */
+/*
+ * Copyright 2018 Google LLC
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
 
 #include "lwip/opt.h"
 
@@ -235,7 +250,7 @@ ip6_select_source_address(struct netif *netif, const ip6_addr_t *dest)
     for (i = 0; i < LWIP_IPV6_NUM_ADDRESSES; i++) {
       if (ip6_addr_isvalid(netif_ip6_addr_state(netif, i)) &&
           ip6_addr_isuniquelocal(netif_ip6_addr(netif, i)) &&
-          ip6_addr_netcmp(dest, netif_ip6_addr(netif, i))) {
+          ip6_addr_net48cmp(dest, netif_ip6_addr(netif, i))) {
         return netif_ip_addr6(netif, i);
       }
     }
diff --git a/lwip/src/include/lwip/ip6_addr.h b/lwip/src/include/lwip/ip6_addr.h
index ee381ae..381b237 100644
--- a/lwip/src/include/lwip/ip6_addr.h
+++ b/lwip/src/include/lwip/ip6_addr.h
@@ -39,6 +39,21 @@
  * Please coordinate changes and requests with Ivan Delamer
  * <delamer@inicotech.com>
  */
+/*
+ * Copyright 2018 Google LLC
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
 #ifndef LWIP_HDR_IP6_ADDR_H
 #define LWIP_HDR_IP6_ADDR_H
 
@@ -133,6 +148,10 @@ typedef struct ip6_addr ip6_addr_t;
 #define ip6_addr_netcmp(addr1, addr2) (((addr1)->addr[0] == (addr2)->addr[0]) && \
                                        ((addr1)->addr[1] == (addr2)->addr[1]))
 
+#define ip6_addr_net48cmp(addr1, addr2) (((addr1)->addr[0] == (addr2)->addr[0]) && \
+                                         (((addr1)->addr[1] & PP_HTONL(0xffff0000UL)) == \
+                                          ((addr2)->addr[1] & PP_HTONL(0xffff0000UL))))
+
 #define ip6_addr_cmp(addr1, addr2) (((addr1)->addr[0] == (addr2)->addr[0]) && \
                                     ((addr1)->addr[1] == (addr2)->addr[1]) && \
                                     ((addr1)->addr[2] == (addr2)->addr[2]) && \
-- 
2.17.1

