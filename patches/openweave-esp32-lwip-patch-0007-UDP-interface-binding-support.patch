From 4a3b8c08e56ea5f3a7b161e136894aea754ae0dd Mon Sep 17 00:00:00 2001
From: Jay Logue <jaylogue@google.com>
Date: Thu, 29 Aug 2019 20:42:46 -0700
Subject: [PATCH] openweave-esp32-lwip-patch-0007 : UDP interface binding
 support

Add support to LwIP UDP PCBs for binding to a specific interface.

This change is adapted from commit 1720798ad6454de2d97ef2f0871614c29db7d970
in tps/lwip:nest/stable.
---
 lwip/src/core/udp.c         | 32 +++++++++++++++++++++++++++-----
 lwip/src/include/lwip/udp.h | 16 ++++++++++++++++
 2 files changed, 43 insertions(+), 5 deletions(-)

diff --git a/lwip/src/core/udp.c b/lwip/src/core/udp.c
index 1d0b24b..6d59993 100644
--- a/lwip/src/core/udp.c
+++ b/lwip/src/core/udp.c
@@ -41,6 +41,21 @@
  * Author: Adam Dunkels <adam@sics.se>
  *
  */
+/*
+ * Copyright 2018 Google LLC
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
 
 /* @todo Check the use of '(struct udp_pcb).chksum_len_rx'!
  */
@@ -252,6 +267,9 @@ udp_input(struct pbuf *p, struct netif *inp)
     ip_addr_debug_print(UDP_DEBUG, &pcb->remote_ip);
     LWIP_DEBUGF(UDP_DEBUG, (", %"U16_F")\n", pcb->remote_port));
 
+    if ( ! (pcb->intf_filter == NULL || pcb->intf_filter == inp) )
+      continue;
+
     /* compare PCB local addr+port to UDP destination addr+port */
     if ((pcb->local_port == dest) &&
         (udp_input_local_match(pcb, inp, broadcast) != 0)) {
@@ -576,12 +594,16 @@ udp_sendto_chksum(struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *dst_ip,
   }
 #endif /* LWIP_IPV6 || (LWIP_IPV4 && LWIP_MULTICAST_TX_OPTIONS) */
 
-  /* find the outgoing network interface for this packet */
-  if(IP_IS_ANY_TYPE_VAL(pcb->local_ip)) {
-    /* Don't call ip_route() with IP_ANY_TYPE */
-    netif = ip_route(IP46_ADDR_ANY(IP_GET_TYPE(dst_ip_route)), dst_ip_route);
+  if (pcb->intf_filter == NULL) {
+    /* find the outgoing network interface for this packet */
+    if(IP_IS_ANY_TYPE_VAL(pcb->local_ip)) {
+      /* Don't call ip_route() with IP_ANY_TYPE */
+      netif = ip_route(IP46_ADDR_ANY(IP_GET_TYPE(dst_ip_route)), dst_ip_route);
+    } else {
+      netif = ip_route(&pcb->local_ip, dst_ip_route);
+    }
   } else {
-    netif = ip_route(&pcb->local_ip, dst_ip_route);
+    netif = pcb->intf_filter;
   }
 
   /* no outgoing network interface could be found? */
diff --git a/lwip/src/include/lwip/udp.h b/lwip/src/include/lwip/udp.h
index b679a82..412daeb 100644
--- a/lwip/src/include/lwip/udp.h
+++ b/lwip/src/include/lwip/udp.h
@@ -35,6 +35,21 @@
  * Author: Adam Dunkels <adam@sics.se>
  *
  */
+/*
+ * Copyright 2018 Google LLC
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
 #ifndef LWIP_HDR_UDP_H
 #define LWIP_HDR_UDP_H
 
@@ -85,6 +100,7 @@ struct udp_pcb {
 /* Protocol specific PCB members */
 
   struct udp_pcb *next;
+  struct netif *intf_filter;
 
   u8_t flags;
   /** ports are in host byte order */
-- 
2.17.1

